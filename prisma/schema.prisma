// Backup Branch
// Our Database Schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id           Int             @id @default(autoincrement())
  name         String
  username     String
  password     String
  email        String
  gender       String
  phoneNumber  String
  dateOfBirth  DateTime
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  appointments Appointment[]
  reviews      PatientReview[]
}

model PatientReview {
  id             Int      @id @default(autoincrement())
  doctorId       Int
  patientId      Int
  review         String
  rating         Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  reviewedDoctor Doctor   @relation(fields: [doctorId], references: [id])
  reviewWriter   Patient  @relation(fields: [patientId], references: [id])
}

model Location {
  id          Int      @id @default(autoincrement())
  street      String
  city        String
  governorate String
  coordinates String
  Doctor      Doctor[]
}

model Doctor {
  id                Int             @id @default(autoincrement())
  name              String
  gender            String
  username          String
  password          String
  email             String
  phoneNumber       String
  about             String?
  specialization    String
  visitFee          Float?
  locationId        Int
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  workingHoursStart String
  workingHoursEnd   String
  appointments      Appointment[]
  location          Location       @relation(fields: [locationId], references: [id])
  reviews           PatientReview[]
}

model Moderator {
  id          Int      @id @default(autoincrement())
  username    String
  email       String
  password    String
  permissions String[]
}

model Prescription {
  id          Int          @id @default(autoincrement())
  prognosis   String
  dosage      String
  notes       String
  date        DateTime     @default(now())
  appointment Appointment?
}

model Appointment {
  id             Int           @id @default(autoincrement())
  patientId      Int
  doctorId       Int
  type           String
  at             DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  prescriptionId Int?          @unique
  doctor         Doctor        @relation(fields: [doctorId], references: [id])
  patient        Patient       @relation(fields: [patientId], references: [id])
  prescription   Prescription? @relation(fields: [prescriptionId], references: [id])
}
